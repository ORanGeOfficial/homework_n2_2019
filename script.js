var Rows=20; //ВЫСОТА ПОЛЯ
var Cols=20; //ШИРИНА ПОЛЯ

var cells;
var field;

var tickTime=0.5;

var stop=1;
var empty=1;

function newArray()
{
  field=[]; //создаем и заполняем двумерный числовой массив для поля

  for(var r=0;r<Rows;r++)
    field.push([]);

  for(var r=0;r<Rows;r++)
    for(var c=0;c<Cols;c++)
      field[r][c]=0;
  
  cells=[]; //создаем массив для блочных эл-в
  for(var i=0;i<Rows;i++)
    cells.push([]);
}

function fillField() //заполняем поле мертвыми клетками
{
  var F=document.getElementById("game"); //получаем игровое поле
  
  while(F.firstChild) //чистим от старых эл-в
    F.removeChild(F.firstChild);
  
  newArray();
  for(var x=0;x<Rows;x++) //идем по рядам
  {  
    var R=document.createElement("div"); //создаем ряд для клеток
    R.setAttribute("class","row"); //присваиваем класс
    F.appendChild(R); //заносим ряд в поле
    
		for(var y=0;y<Cols;y++) //идем по клеткам
    {
      var cell=document.createElement("div");
      cell.style.height=600/Rows+"px";
      cell.style.width=600/Cols+"px";
      
      cell.x=x; //координаты
      cell.y=y;
      cell.alive=false; //состояние
      cell.timer=0; //время удержания мыши
      cell.setAttribute("class","cell"); //присваиваем класс
      
      cell.onclick=function() //обработка нажатия на клетку
      {
        this.alive=!this.alive; //нажатие меняет состояние клетки
        this.style.background=this.alive?"white":"gray"; //а также цвет
        field[this.x][this.y]=this.alive?1:0; //вместе с клеткой обновляем числовой массив поля
        this.style.border=this.alive?"1px solid white":"1px solid darkgray";
        empty=0;
      }
      
      cell.onmouseover=function() //обработка наведения мыши на клетку
      {
        if(!this.alive|stop==1) //мертвые клетки не реагируют
          return;

        this.timer=setTimeout(killCell,tickTime*100,this); //живая клетка при наведении запускает свой таймер до смерти (2 сек при tick=5)
      }      

      cell.onmouseout=function() //обработка отведения мыши от клетки
      {
        if(this.timer!=0) //если таймер был запущен
        {
          clearTimeout(this.timer); //отменяем смерть клетки
          this.timer=0; //обнуляем таймер
        }
      } 
      
      R.appendChild(cell); //заносим клетку в 
      cells[x][y]=cell; //заносим клетку в массив блочных эл-в
		}    
	}
}

function updateField()
{
	for(var x=0;x<Rows;x++)
		for(var y=0;y<Cols;y++)
    {
      cells[x][y].style.background=field[x][y]==1?"white":"gray";
      cells[x][y].style.border=field[x][y]==1?"1px solid white":"1px solid darkgray";
    }
}

fillField();

function killCell(c) //убить клетку
{
  c.alive=false;
  c.style.background="gray"; 
  field[c.x][c.y]=0;
}
  
function changeTick(x)
{
  tickTime=x;
  document.getElementById("timer").textContent=x/4+'s';
}

function clr()
{
  document.getElementById("b").textContent="PLAY";
  stop=1;
  for(var r=0;r<Rows;r++) //заполняем поле мертвыми клетками
    for(var c=0;c<Cols;c++)
      field[r][c]=0;
  updateField();
}

function neighbors(r,c) //кол-во соседей в области 3x3
{
  var cnt=0; //обнуляем счетчик

  if(r>=1&c>=1) cnt+=field[r-1][c-1];
  if(r>=1) cnt+=field[r-1][c];
  if(r>=1&c<Cols-1) cnt+=field[r-1][c+1];

  if(c>=1) cnt+=field[r][c-1];
  if(c<Cols-1) cnt+=field[r][c+1];

  if(r<Rows-1&c>=1) cnt+=field[r+1][c-1];
  if(r<Rows-1) cnt+=field[r+1][c];
  if(r<Rows-1&c<Cols-1) cnt+=field[r+1][c+1];

  return cnt; //возвращаем кол-во
}

function tick() //обработка одного тика
{

  var newField=[]; //создаем новый двумерный массив для поля
  for(var r=0;r<Rows;r++)
    newField.push([]);

  for(var r=0;r<Rows;r++) //заполняем поле мертвыми клетками
    for(var c=0;c<Cols;c++)
      newField[r][c]=0;

  var cellSum=0;
  for(var r=0;r<Rows;r++) //проходим по новому полю и расставляем обновляем клетки
    for(var c=0;c<Cols;c++)
    {
      var cnt=neighbors(r,c) //кол-во соседей у текущей клетки в прошлом поколении

      if(field[r][c]==0) //если у прошлого поколения эта клетка была мертва
      {
        if(cnt==3) //но у нее было достаточно
            newField[r][c]=1; //оживляем ее
      }
      else //если у прошлого поколения эта клетка была жива
      {
        if(cnt<2||cnt>3) //но у нее было слишком мало или слишком много соседей
          newField[r][c]=0; //она умирает
        else
          newField[r][c] = true; //если соседей нормальное кол-во, оставляем клетку
      }



      cellSum+=field[r][c];
    }

  field=newField; //обновляем поле
  updateField(); //отрисовываем поле на холсте в соответствии с массивом

  if(cellSum==0)
  {
    empty=1;
    stop=1;
    document.getElementById("b").textContent="PLAY";
  }

  if(stop==0)
    setTimeout(tick,tickTime*250) //рекурсивно запускаем новый тик
}

function run()
{
  if(stop==1&empty==0)
  {
    document.getElementById("b").textContent="PAUSE";
    stop=0;
    tick();
  }  
  else
  {
    document.getElementById("b").textContent="PLAY";
    stop=1;
  }
}

function fillRand()
{
  empty=0;
  clr();
  for(var i=0;i<Rows*Cols*0.3;i++)
  {
    var r=Math.floor(Math.random()*Rows);
    var c=Math.floor(Math.random()*Cols);
    field[r][c]=1;
  }
  updateField();
}

function drawGun()
{
  empty=0;
  Rows=40;
  Cols=40;
  fillField();
  field=[
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,1,1,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]] 
  updateField();
  
}